<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.comma_groupware.mapper.ProjectTaskMapper">
	
	<insert id="addProjectTask" parameterType="com.example.comma_groupware.dto.ProjectTask"
		useGeneratedKeys="true" keyProperty="taskId">
		
		INSERT INTO project_task(
			task_parent, project_id, task_title, task_status, file_count, due_date
		) VALUES(
			#{taskParent}, #{projectId}, #{taskTitle}, #{taskStatus}, #{fileCount}, #{dueDate}
		)
	</insert>
	
	<select id="selectTaskListByProjectId" parameterType="map">
		WITH RECURSIVE task_tree AS (
	    <!-- 1. 최상위 업무부터 시작 -->
	    SELECT
	        pt.task_id AS taskId,
	        pt.task_title AS taskTitle,
	        pt.task_status AS taskStatus,
	        pt.start_date AS startDate,
	        pt.due_date AS dueDate,
	        pt.task_parent AS taskParent,
	        0 AS level,
	        CAST(pt.task_id AS CHAR(200)) AS sort_path
	    FROM project_task pt
	    WHERE pt.project_id = #{projectId}
	      AND (pt.task_parent IS NULL OR pt.task_parent = 0)
	
	    UNION ALL
	
	    <!-- 2. 하위 업무를 재귀적으로 가져오기 -->
	    SELECT 
	        pt.task_id,
	        pt.task_title,
	        pt.task_status,
	        pt.start_date,
	        pt.due_date,
	        pt.task_parent,
	        tt.level + 1 AS level,
	        CONCAT(tt.sort_path, '-', pt.task_id) AS sort_path
	    FROM project_task pt
	    INNER JOIN task_tree tt ON pt.task_parent = tt.taskId
	)
	SELECT 
	    tt.*,
	    m.memberCount,
	    m.first_emp_id AS firstEmpId,
	    e.emp_name AS memberName,
	    (SELECT COUNT(*) FROM project_task WHERE task_parent = tt.taskId) AS childCount
	FROM task_tree tt
	LEFT JOIN (
	    SELECT 
	        tm.task_id, 
	        COUNT(*) AS memberCount,
	        (SELECT tm2.emp_id
	         FROM task_member tm2
	         WHERE tm2.task_id = tm.task_id
	         ORDER BY tm2.assigned_at ASC
	         LIMIT 1) AS first_emp_id
	    FROM task_member tm
	    GROUP BY tm.task_id
	) m ON tt.taskId = m.task_id
	LEFT JOIN employee e ON e.emp_id = m.first_emp_id
	ORDER BY tt.sort_path;
	</select>
</mapper>